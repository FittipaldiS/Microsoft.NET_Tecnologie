<Application x:Class="ConvertInfoPc.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:fa="http://schemas.fontawesome.com/icons/" 
             xmlns:wpftoolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:ConvertInfoPc"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- Button Style -->
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="MinWidth" Value="150" />
            <Setter Property="MinHeight" Value="40" />
        </Style>

        <!-- Button Style Trash -->
        <Style TargetType="Button" x:Key="TrashButton">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="MinWidth" Value="150" />
            <Setter Property="MinHeight" Value="40" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="2" Background="{TemplateBinding Background}">
                            <fa:ImageAwesome 
                                Icon="Regular_TrashAlt" 
                                VerticalAlignment="Center" 
                                HorizontalAlignment="Center"
                                Margin="4"
                                Foreground="{TemplateBinding Foreground}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ActionButton_Small">
            <Setter Property="Height" Value="20" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style TargetType="Button" x:Key="RemoveButton_Small" BasedOn="{StaticResource ActionButton_Small}">
            <Setter Property="Background" Value="DarkOrange" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="2" Background="{TemplateBinding Background}">
                            <fa:ImageAwesome 
                                Icon="Solid_Trash" 
                                VerticalAlignment="Center" 
                                HorizontalAlignment="Center"
                                Margin="5"
                                Foreground="{TemplateBinding Foreground}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Orange" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Orange" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="Gray" />
                                <Setter Property="Foreground" Value="LightGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Button AddGroupOrUser-->
        <Style TargetType="Button" x:Key="AddButton" BasedOn="{StaticResource ActionButton_Small}">
            <Setter Property="Background" Value="ForestGreen" />
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="2" Background="{TemplateBinding Background}">
                            <fa:ImageAwesome 
                                Icon="Solid_Plus" 
                                VerticalAlignment="Center" 
                                HorizontalAlignment="Center"
                                Margin="4"
                                Foreground="{TemplateBinding Foreground}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Green" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Green" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="Gray" />
                                <Setter Property="Foreground" Value="LightGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Button Style for the UserControl Page-->
        <Style TargetType="Button" x:Key="IconButton">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="MinHeight" Value="40" />
        </Style>

        <!-- Navigation Button Base Style -->
        <Style TargetType="Button" x:Key="NavigationButtonBaseStyle">
            <Setter Property="Background" Value="WhiteSmoke" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="MinHeight" Value="40" />
        </Style>

        <!-- User Navigation Button Style -->
        <Style x:Key="UserNavigationButtonStyle" 
               TargetType="Button"                
               BasedOn="{StaticResource NavigationButtonBaseStyle}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="0" Background="{TemplateBinding Background}">
                            <fa:ImageAwesome 
                                Icon="Solid_User" 
                                VerticalAlignment="Center" 
                                HorizontalAlignment="Center"
                                Margin="12"
                                Foreground="{TemplateBinding Foreground}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightBlue" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="LightBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Group Navigation Button Style -->
        <Style x:Key="GroupNavigationButtonStyle"
               TargetType="Button"
               BasedOn="{StaticResource NavigationButtonBaseStyle}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="0" Background="{TemplateBinding Background}">
                            <fa:ImageAwesome 
                                Icon="Solid_Users" 
                                VerticalAlignment="Center" 
                                HorizontalAlignment="Center"
                                Margin="12"
                                Foreground="{TemplateBinding Foreground}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightBlue" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="LightBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>

        <!-- Search Button Style -->
        <Style TargetType="Button" x:Key="SearchButton">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="6" />
        </Style>

        <!-- Grid Menu Button Style -->
        <Style TargetType="Button" x:Key="GridMenuButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <StackPanel 
                            VerticalAlignment="Center" 
                            Margin="5 0">
                            <ContentPresenter />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="Black" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Gray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Grid Menu Button Style for Group -->
        <Style TargetType="Button" x:Key="GridMenuGroupButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <StackPanel 
                            VerticalAlignment="Center" 
                            Margin="5 0">
                            <ContentPresenter />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="Black" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Gray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Inner TextBox Icon Button Style -->
        <Style TargetType="fa:ImageAwesome" x:Key="InnerTextBoxIconButton">
            <Setter Property="Foreground" Value="Black" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Gray" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Textbox Style -->
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinHeight" Value="40" />
        </Style>

        <!-- PasswordBox Style -->
        <Style TargetType="PasswordBox">
            <Setter Property="Margin" Value="5" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinHeight" Value="40" />
        </Style>

        <!-- Combobox Style -->
        <Style TargetType="ComboBox">
            <Setter Property="MinWidth" Value="100" />
            <Setter Property="MinHeight" Value="40" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <Style TargetType="wpftoolkit:CheckComboBox">
            <Setter Property="MinWidth" Value="100" />
            <Setter Property="MinHeight" Value="40" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <Style TargetType="wpftoolkit:SelectAllSelectorItem">
            <Setter Property="Background" Value="AliceBlue"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <!-- Label Style -->
        <Style TargetType="Label">
            <Setter Property="MinHeight" Value="40" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <!-- Small Headline Label Style -->
        <Style TargetType="Label" x:Key="SmallHeadlineLabel">
            <Setter Property="FontWeight" Value="Light" />
            <Setter Property="Margin" Value="0" />
        </Style>

        <!-- Checkbox Style -->
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="5" />
        </Style>
    </Application.Resources>
</Application>
